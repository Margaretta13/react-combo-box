
(function(definition){"use strict";if(typeof exports==='object'){module.exports=definition();}
else if(typeof define==='function'&&define.amd){define([],definition);}
else{window.ReactComboBox={ComboBox:definition()};}})(function(){"use strict";var ItemParserMixin={getValueOfItem:function(item,titleField){var value=titleField?item[titleField]:item;return value;}};var EventHandlersMixin={keyCodes:{ESCAPE:27,ARROW_DOWN:40,ARROW_UP:38,ENTER:13},handleInputChange:function(event){this.setProps({value:event.target.value});this.filterItems(event.target.value);},handleArrowClick:function(){if(this.props.disabled){return false;}
if(!this.state.isOpened){this.openDropDown();this.refs.textInput.getDOMNode().focus();}else{this.closeDropdownAndBringFocusBack();}
return false;},openDropDownIfClosed:function(){if(!this.state.isOpened){this.openDropDown();}},handleKeys:function(event){var options=this.state.filteredOptions||this.props.options;var index=options.indexOf(this.state.selectedItem)||0;this.openDropDownIfClosed();switch(event.keyCode){case this.keyCodes.ARROW_DOWN:index++;if(index>=options.length){index=0;}
this.selectItem(options[index]);return false;case this.keyCodes.ARROW_UP:index--;if(index<0){index=options.length-1;}
this.selectItem(options[index]);return false;case this.keyCodes.ENTER:this.filterItems(this.refs.textInput.getDOMNode().value);this.closeDropDown();break;case this.keyCodes.ESCAPE:this.setState({selectedItem:null});this.closeDropDown();break;default:break;}}};var OptionsHelperMixin={retrieveDataFromDataSource:function(inputValue){var onLoaded=function(newOptions){this.setProps({options:newOptions});}.bind(this);var probablyPromise=this.props.source(inputValue,onLoaded);if(probablyPromise&&probablyPromise.then){probablyPromise.then(onLoaded);}},filterItems:function(query){if(this.props.source){this.retrieveDataFromDataSource(query);}else if(query){var filteredOptions=this.props.options.filter(function(item){var value=this.props.titleField?item[this.props.titleField]:item;return value.indexOf(query)!==-1;}.bind(this));this.setState({filteredOptions:filteredOptions});}else{this.setState({filteredOptions:null});}}};var DropDownItem=React.createClass({displayName:'DropDownItem',mixins:[ItemParserMixin],render:function(){return(React.DOM.div(null,this.getValueOfItem(this.props.item,this.props.titleField)));}});var DropDownList=React.createClass({displayName:'DropDownList',onItemSelected:function(item){this.props.onSelect(item);},generateItemKey:function(item){if(typeof item==="string"){return item;}
return JSON.stringify(item);},render:function(){this.props.items=this.props.items||[];var listItems=this.props.items.map(function(item){var itemElement=React.addons.cloneWithProps(this.props.itemBlock,{item:item,titleField:this.props.titleField});var classes=React.addons.classSet({'dropdown-item':true,'dropdown-item_active':item===this.props.selected});var bindedClick=this.onItemSelected.bind(this,item);return(React.DOM.div({className:classes,key:this.generateItemKey(item),onMouseDown:bindedClick},itemElement));}.bind(this));var displayMode=this.props.show?"block":"none";return(React.DOM.div({className:"reactcombobox__dropdown",style:{display:displayMode}},listItems));}});var ComboBox=React.createClass({displayName:'ComboBox',mixins:[EventHandlersMixin,OptionsHelperMixin,ItemParserMixin],propTypes:{options:React.PropTypes.array,source:React.PropTypes.func,titleField:React.PropTypes.string,onChange:React.PropTypes.func,cutomItem:React.PropTypes.component,disabled:React.PropTypes.bool},getInitialState:function(){return{isOpened:false};},getDefaultProps:function(){return{options:[]};},componentDidMount:function(){if(this.props.source){this.retrieveDataFromDataSource();}else{this.filterItems(this.props.value);}},render:function(){var classes=React.addons.classSet({'reactcombobox__arrow':true,'reactcombobox__arrow_disabled':this.props.disabled,'reactcombobox__arrow_up':this.state.isOpened,'reactcombobox__arrow_down':!this.state.isOpened});var itemBlock=this.props.children||this.props.cutomItem||DropDownItem(null);return(React.DOM.div({className:"reactcombobox"},React.DOM.div({className:"reactcombobox__input-wrap"},React.DOM.a({className:classes,onMouseDown:this.handleArrowClick,tabIndex:"-1"}),React.DOM.input({type:"text",autocomplete:"off",className:"reactcombobox__input",ref:"textInput",value:this.props.value,disabled:this.props.disabled,onFocus:this.openDropDown,onBlur:this.closeDropDown,onChange:this.handleInputChange,onKeyDown:this.handleKeys})),DropDownList({items:this.state.filteredOptions||this.props.options,titleField:this.props.titleField,selected:this.state.selectedItem,show:this.state.isOpened,itemBlock:itemBlock,onSelect:this.selectItemAndFilter})));},selectItem:function(item){this.setState({selectedItem:item});this.setProps({value:this.getValueOfItem(item,this.props.titleField)});if(this.onChange){this.onChange(item,value);}},selectItemAndFilter:function(item){this.filterItems(this.getValueOfItem(item,this.props.titleField));this.selectItem(item);this.closeDropdownAndBringFocusBack();},openDropDown:function(){this.setState({isOpened:true});},closeDropDown:function(){this.setState({isOpened:false});},closeDropdownAndBringFocusBack:function(){var supportedIntervalMethod=window.requestAnimationFrame?window.requestAnimationFrame:window.setTimeout;supportedIntervalMethod.call(window,function(){this.refs.textInput.getDOMNode().focus();this.closeDropDown();}.bind(this));}});return ComboBox;});